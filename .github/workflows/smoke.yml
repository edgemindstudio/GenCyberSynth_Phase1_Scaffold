# .github/workflows/smoke.yml
name: Smoke (synth+eval)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      CUDA_VISIBLE_DEVICES: ""
      TF_CPP_MIN_LOG_LEVEL: "2"
      CFG: configs/config.yaml
      SMOKE_MODEL: gan

    steps:
      - name: Checkout repo (with LFS + submodules)
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive

      - name: Set up Python 3.10 (TF-friendly)
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "none"

      # --- Install deps ---------------------------------------------------
      # Prefer a CI-specific requirements file if it exists; otherwise
      # create one by stripping any git+ssh or gcs-core references.
      - name: Prepare CI requirements file
        shell: bash
        run: |
          set -euxo pipefail
          if [[ -f requirements.ci.txt ]]; then
            echo "Using existing requirements.ci.txt"
          else
            echo "Generating requirements.ci.txt from requirements.txt (filtering git+ssh and gcs-core)â€¦"
            awk '!/git\+ssh/ && !/gcs-core/' requirements.txt > requirements.ci.txt
          fi
          echo "===== requirements.ci.txt ====="
          cat requirements.ci.txt
          echo "==============================="

      - name: Install deps
        shell: bash
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.ci.txt

      # Put repo-local gcs-core (submodule) on PYTHONPATH so imports work
      - name: Add gcs-core to PYTHONPATH (submodule path)
        shell: bash
        run: |
          set -euxo pipefail
          echo "PYTHONPATH=$GITHUB_WORKSPACE/gcs-core:$PYTHONPATH" >> "$GITHUB_ENV"
          ls -la gcs-core || true
          ls -la gcs-core/gcs_core || true

      - name: Show versions
        run: |
          python - <<'PY'
          import sys
          print("Python:", sys.version)
          try:
              import tensorflow as tf; print("TensorFlow:", tf.__version__)
          except Exception as e:
              print("TF import failed:", e)
          try:
              import gcs_core; print("gcs_core module path:", gcs_core.__file__)
          except Exception as e:
              print("gcs_core import failed:", e)
          PY

      # --- Smoke (synth+eval) --------------------------------------------
      - name: Smoke test (synth + eval)
        shell: bash
        run: |
          set -euxo pipefail
          make smoke SMOKE_MODEL="${SMOKE_MODEL}" CFG="${CFG}"

      # --- Collect artifacts even on failure ------------------------------
      - name: Collect scores table
        if: always()
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p ci_out
          python scripts/collect_scores.py || true
          cp -r artifacts ci_out/artifacts || true
          cp artifacts/phase1_scores.csv ci_out/ 2>/dev/null || true

      - name: Upload artifacts (summaries, grids, table)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-artifacts
          path: ci_out
          if-no-files-found: warn
